@page
@model Dayglass.Pages.ShowAnimationModel
@{
    ViewData["Title"] = "Day Progress";
    // Calculate total seconds in the user's day
    var totalSeconds = (Model.DayEnd - Model.DayStart).TotalSeconds;
    var now = DateTime.Now.TimeOfDay;
    var elapsedSeconds = now > Model.DayEnd ? totalSeconds : (now < Model.DayStart ? 0 : (now - Model.DayStart).TotalSeconds);
}

<div id="grid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(5px, 1fr)); gap: 0.5px;">
    @for (int i = 0; i < totalSeconds; i++)
    {
        var color = i < elapsedSeconds ? "red" : "green";
        <div style="width: 5px; height: 5px; background-color: @color;"></div>
    }
</div>

@section Scripts {
    <script>
        let elapsedSeconds = Math.floor(@elapsedSeconds);
        const cells = document.getElementById("grid").children;

        function updateGrid() {
            const now = new Date();
            const dayStart = new Date(now);
            dayStart.setHours(@Model.DayStart.Hours, @Model.DayStart.Minutes, 0, 0);

            const currentElapsedSeconds = Math.floor((now - dayStart) / 1000);
            
            while (elapsedSeconds < currentElapsedSeconds && elapsedSeconds < cells.length) {
                cells[elapsedSeconds].style.backgroundColor = "red";
                elapsedSeconds++;
            }
        }

        // Update the grid every second
        setInterval(updateGrid, 1000);
    </script>
}
